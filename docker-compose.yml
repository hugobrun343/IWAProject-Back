services:
# region PostgreSQL Databases
  announcement-postgres:
    image: postgres:15-alpine
    container_name: announcement-postgres
    environment:
      POSTGRES_DB: announcement_db
      POSTGRES_USER: announcement_user
      POSTGRES_PASSWORD: announcement_password
    ports:
      - "5432:5432"
    volumes:
      - announcement_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U announcement_user -d announcement_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  application-postgres:
    image: postgres:15-alpine
    container_name: application-postgres
    environment:
      POSTGRES_DB: application_db
      POSTGRES_USER: application_user
      POSTGRES_PASSWORD: application_password
    ports:
      - "5433:5432"
    volumes:
      - application_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U application_user -d application_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  chat-postgres:
    image: postgres:15-alpine
    container_name: chat-postgres
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: chat_password
    ports:
      - "5434:5432"
    volumes:
      - chat_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat_user -d chat_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  favorite-postgres:
    image: postgres:15-alpine
    container_name: favorite-postgres
    environment:
      POSTGRES_DB: favorite_db
      POSTGRES_USER: favorite_user
      POSTGRES_PASSWORD: favorite_password
    ports:
      - "5435:5432"
    volumes:
      - favorite_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U favorite_user -d favorite_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  keycloak-postgres:
    image: postgres:15-alpine
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    ports:
      - "5436:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak_user -d keycloak_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  log-postgres:
    image: postgres:15-alpine
    container_name: log-postgres
    environment:
      POSTGRES_DB: log_db
      POSTGRES_USER: log_user
      POSTGRES_PASSWORD: log_password
    ports:
      - "5437:5432"
    volumes:
      - log_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U log_user -d log_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  payment-postgres:
    image: postgres:15-alpine
    container_name: payment-postgres
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_password
    ports:
      - "5438:5432"
    volumes:
      - payment_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payment_user -d payment_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  rating-postgres:
    image: postgres:15-alpine
    container_name: rating-postgres
    environment:
      POSTGRES_DB: rating_db
      POSTGRES_USER: rating_user
      POSTGRES_PASSWORD: rating_password
    ports:
      - "5439:5432"
    volumes:
      - rating_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rating_user -d rating_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

  user-postgres:
    image: postgres:15-alpine
    container_name: user-postgres
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_password
    ports:
      - "5440:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_user -d user_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - iwa-network

# endregion
# region Services

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.5
    container_name: keycloak-service
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    ports:
      - "8080:8080"
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    command: start-dev
    networks:
      - iwa-network

  announcement-service:
    build:
      context: ./Announcement-Service
      dockerfile: Dockerfile
    container_name: announcement-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://announcement-postgres:5432/announcement_db
      SPRING_DATASOURCE_USERNAME: announcement_user
      SPRING_DATASOURCE_PASSWORD: announcement_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      announcement-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  application-service:
    build:
      context: ./Application-Service
      dockerfile: Dockerfile
    container_name: application-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://application-postgres:5432/application_db
      SPRING_DATASOURCE_USERNAME: application_user
      SPRING_DATASOURCE_PASSWORD: application_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8082
    ports:
      - "8082:8082"
    restart: unless-stopped
    depends_on:
      application-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  chat-service:
    build:
      context: ./Chat-Service
      dockerfile: Dockerfile
    container_name: chat-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://chat-postgres:5432/chat_db
      SPRING_DATASOURCE_USERNAME: chat_user
      SPRING_DATASOURCE_PASSWORD: chat_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8083
    ports:
      - "8083:8083"
    restart: unless-stopped
    depends_on:
      chat-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  favorite-service:
    build:
      context: ./Favorite-Service
      dockerfile: Dockerfile
    container_name: favorite-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://favorite-postgres:5432/favorite_db
      SPRING_DATASOURCE_USERNAME: favorite_user
      SPRING_DATASOURCE_PASSWORD: favorite_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8084
    ports:
      - "8084:8084"
    restart: unless-stopped
    depends_on:
      favorite-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  log-service:
    build:
      context: ./Log-Service
      dockerfile: Dockerfile
    container_name: log-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://log-postgres:5432/log_db
      SPRING_DATASOURCE_USERNAME: log_user
      SPRING_DATASOURCE_PASSWORD: log_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8086
    ports:
      - "8086:8086"
    restart: unless-stopped
    depends_on:
      log-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  payment-service:
    build:
      context: ./Payment-Service
      dockerfile: Dockerfile
    container_name: payment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://payment-postgres:5432/payment_db
      SPRING_DATASOURCE_USERNAME: payment_user
      SPRING_DATASOURCE_PASSWORD: payment_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8087
    ports:
      - "8087:8087"
    restart: unless-stopped
    depends_on:
      payment-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  rating-service:
    build:
      context: ./Rating-Service
      dockerfile: Dockerfile
    container_name: rating-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://rating-postgres:5432/rating_db
      SPRING_DATASOURCE_USERNAME: rating_user
      SPRING_DATASOURCE_PASSWORD: rating_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8088
    ports:
      - "8088:8088"
    restart: unless-stopped
    depends_on:
      rating-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  user-service:
    build:
      context: ./User-Service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-postgres:5432/user_db
      SPRING_DATASOURCE_USERNAME: user_user
      SPRING_DATASOURCE_PASSWORD: user_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8089
    ports:
      - "8089:8089"
    restart: unless-stopped
    depends_on:
      user-postgres:
        condition: service_healthy
    networks:
      - iwa-network

  gateway-service:
    build:
      context: ./Gateway-Service
      dockerfile: Dockerfile
    container_name: gateway-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8085
    ports:
      - "8085:8085"
    restart: unless-stopped
    depends_on:
      - announcement-service
      - application-service
      - chat-service
      - favorite-service
      - log-service
      - payment-service
      - rating-service
      - user-service
    networks:
      - iwa-network

# endregion
# region Volume Configuration

volumes:
  announcement_data:
  application_data:
  chat_data:
  favorite_data:
  keycloak_data:
  log_data:
  payment_data:
  rating_data:
  user_data:

# endregion
# region Network Configuration

networks:
  iwa-network:
    driver: bridge

# endregion
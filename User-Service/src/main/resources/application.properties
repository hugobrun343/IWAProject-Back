spring.application.name=User-Service

# ----------------------- Swagger -----------------------
springdoc.swagger-ui.path=/api/swagger-ui.html

# ----------------------- Keycloak -----------------------
keycloak.server-url=${KEYCLOAK_SERVER_URL}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.client-id=${KEYCLOAK_CLIENT_ID}
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
keycloak.admin-username=${KEYCLOAK_ADMIN_USERNAME}
keycloak.admin-password=${KEYCLOAK_ADMIN_PASSWORD}

# ----------------------- Kafka -----------------------
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer
spring.kafka.consumer.group-id=${KAFKA_USER_CONSUMER_GROUP_ID}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Optional : nombre de threads pour le listener
spring.kafka.listener.concurrency=${KAFKA_USER_LISTENER_CONCURRENCY}

# Optional : offset initial si aucun offset n'existe
spring.kafka.consumer.auto-offset-reset=${KAFKA_USER_CONSUMER_AUTO_OFFSET_RESET}

# Kafka topics
kafka.logs.topic=${KAFKA_LOGS_TOPIC}

# ----------------------- Gateway Security -----------------------
gateway.secret=${GATEWAY_SECRET:}

# ----------------------- CORS (Gateway only) -----------------------
cors.allowed.origins=${CORS_GATEWAY_ORIGINS}
